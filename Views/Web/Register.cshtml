@model FoodDeliveryApplication.Models.UserModel

@{
    Layout = null;
}

<!DOCTYPE html>
<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Reg</title>

    <link href="~/component/img/favicon.ico" type="image/x-icon" rel="shortcut icon" />
    <link rel="stylesheet" href="~/component/style.css">
    <link rel="stylesheet" href="~/component/media-queries.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.min.css" integrity="sha384-T3c6CoIi6uLrA9TneNEoa7RxnatzjcDSCmG1MXxSR1GAsXEV/Dwwykc2MPK8M2HN" crossorigin="anonymous">
    <script src="https://code.jquery.com/jquery-3.7.1.min.js" integrity="sha256-/JqT3SQfawRcv/BIHPThkBvs0OEvtFFmqPF/lYI/Cxo=" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/notify.js/1.2.3/notify.min.js"></script>
    @*<script src="~/component/Crud-Ajax.js"></script>*@
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.4/dist/sweetalert2.all.min.js"></script>
    <link href="https://cdn.jsdelivr.net/npm/sweetalert2@11.12.4/dist/sweetalert2.min.css" rel="stylesheet">
</head>
<body>
    <section id="signup">
        <div class="container">
            <div class="row" id="register">
                <div class="col-md-4 offset-md-4">
                    <h1>USER REGISTRATION</h1>

                    @using (Ajax.BeginForm("Register", "Web", new AjaxOptions { OnSuccess = "Success", OnFailure = "Fail" }, new { id = "formsubmit", @class = "form-horizontal", enctype = "multipart/form-data" }))
                    {
                        @Html.AntiForgeryToken()

                <div class="form-horizontal">
                    @*<h4>User</h4>*@
                    <hr />
                    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                    <div class="form-group">
                        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", required = "required", @placeholder = "Enter name" } })
                            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Gender, new List<SelectListItem>
                            {
                                new SelectListItem() {Text = "Male" },
                                new SelectListItem() {Text = "Female" },
                                new SelectListItem() {Text = "Others" },
                            }, "-Select-", new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <button type="submit" id="btnSubmit" value="Create" class="btn btn-danger">
                                Register
                            </button>
                        </div>
                    </div>
                    @ViewBag.Message
                </div>
                    }
                </div>
            </div>
        </div>
    </section>

    <script>
        function Success(response) {
            console.log(response); // Debugging
            if (response.result) {
                Swal.fire(response);
                /*$.notify(response.message, { globalPosition: 'top right', className: 'success' });*/
            } else {
                $.notify(response.message, { globalPosition: 'top right', className: 'error' });
            }
        }

        function Fail(response) {
            console.log(response); // Debugging
            $.notify('An error occurred while processing your request.', { globalPosition: 'top right', className: 'error' });
        }
    </script>
</body>
</html>
