#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace FoodDeliveryApplication
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="FoodDb")]
	public partial class FoodDataDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertUserDetail(UserDetail instance);
    partial void UpdateUserDetail(UserDetail instance);
    partial void DeleteUserDetail(UserDetail instance);
    partial void InsertfoodDetail(foodDetail instance);
    partial void UpdatefoodDetail(foodDetail instance);
    partial void DeletefoodDetail(foodDetail instance);
    partial void InsertcartDetail(cartDetail instance);
    partial void UpdatecartDetail(cartDetail instance);
    partial void DeletecartDetail(cartDetail instance);
    partial void InserttblDistrict(tblDistrict instance);
    partial void UpdatetblDistrict(tblDistrict instance);
    partial void DeletetblDistrict(tblDistrict instance);
    partial void InserttblCity(tblCity instance);
    partial void UpdatetblCity(tblCity instance);
    partial void DeletetblCity(tblCity instance);
    partial void InserttblOrder(tblOrder instance);
    partial void UpdatetblOrder(tblOrder instance);
    partial void DeletetblOrder(tblOrder instance);
    #endregion
		
		public FoodDataDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FoodDataDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FoodDataDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public FoodDataDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Admin> Admins
		{
			get
			{
				return this.GetTable<Admin>();
			}
		}
		
		public System.Data.Linq.Table<UserDetail> UserDetails
		{
			get
			{
				return this.GetTable<UserDetail>();
			}
		}
		
		public System.Data.Linq.Table<foodDetail> foodDetails
		{
			get
			{
				return this.GetTable<foodDetail>();
			}
		}
		
		public System.Data.Linq.Table<cartDetail> cartDetails
		{
			get
			{
				return this.GetTable<cartDetail>();
			}
		}
		
		public System.Data.Linq.Table<tblDistrict> tblDistricts
		{
			get
			{
				return this.GetTable<tblDistrict>();
			}
		}
		
		public System.Data.Linq.Table<tblCity> tblCities
		{
			get
			{
				return this.GetTable<tblCity>();
			}
		}
		
		public System.Data.Linq.Table<tblOrder> tblOrders
		{
			get
			{
				return this.GetTable<tblOrder>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Admin")]
	public partial class Admin
	{
		
		private string _Name;
		
		private string _Userid;
		
		private string _Password;
		
		public Admin()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(25)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this._Name = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Userid", DbType="VarChar(10)")]
		public string Userid
		{
			get
			{
				return this._Userid;
			}
			set
			{
				if ((this._Userid != value))
				{
					this._Userid = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(15)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this._Password = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UserDetails")]
	public partial class UserDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UserId;
		
		private string _Name;
		
		private string _Gender;
		
		private string _Email;
		
		private string _Phone;
		
		private string _Password;
		
		private EntitySet<cartDetail> _cartDetails;
		
		private EntitySet<tblOrder> _tblOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUserIdChanging(int value);
    partial void OnUserIdChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnGenderChanging(string value);
    partial void OnGenderChanged();
    partial void OnEmailChanging(string value);
    partial void OnEmailChanged();
    partial void OnPhoneChanging(string value);
    partial void OnPhoneChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    #endregion
		
		public UserDetail()
		{
			this._cartDetails = new EntitySet<cartDetail>(new Action<cartDetail>(this.attach_cartDetails), new Action<cartDetail>(this.detach_cartDetails));
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UserId", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UserId
		{
			get
			{
				return this._UserId;
			}
			set
			{
				if ((this._UserId != value))
				{
					this.OnUserIdChanging(value);
					this.SendPropertyChanging();
					this._UserId = value;
					this.SendPropertyChanged("UserId");
					this.OnUserIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(25)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Gender", DbType="VarChar(10)")]
		public string Gender
		{
			get
			{
				return this._Gender;
			}
			set
			{
				if ((this._Gender != value))
				{
					this.OnGenderChanging(value);
					this.SendPropertyChanging();
					this._Gender = value;
					this.SendPropertyChanged("Gender");
					this.OnGenderChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Email", DbType="VarChar(20)")]
		public string Email
		{
			get
			{
				return this._Email;
			}
			set
			{
				if ((this._Email != value))
				{
					this.OnEmailChanging(value);
					this.SendPropertyChanging();
					this._Email = value;
					this.SendPropertyChanged("Email");
					this.OnEmailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Phone", DbType="VarChar(10)")]
		public string Phone
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.OnPhoneChanging(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("Phone");
					this.OnPhoneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="VarChar(15)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDetail_cartDetail", Storage="_cartDetails", ThisKey="UserId", OtherKey="User_Id")]
		public EntitySet<cartDetail> cartDetails
		{
			get
			{
				return this._cartDetails;
			}
			set
			{
				this._cartDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDetail_tblOrder", Storage="_tblOrders", ThisKey="UserId", OtherKey="User_Id")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cartDetails(cartDetail entity)
		{
			this.SendPropertyChanging();
			entity.UserDetail = this;
		}
		
		private void detach_cartDetails(cartDetail entity)
		{
			this.SendPropertyChanging();
			entity.UserDetail = null;
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.UserDetail = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.UserDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.foodDetails")]
	public partial class foodDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _fid;
		
		private string _Category;
		
		private string _Name;
		
		private string _ImgPath;
		
		private System.Nullable<decimal> _Price;
		
		private EntitySet<cartDetail> _cartDetails;
		
		private EntitySet<tblOrder> _tblOrders;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnfidChanging(int value);
    partial void OnfidChanged();
    partial void OnCategoryChanging(string value);
    partial void OnCategoryChanged();
    partial void OnNameChanging(string value);
    partial void OnNameChanged();
    partial void OnImgPathChanging(string value);
    partial void OnImgPathChanged();
    partial void OnPriceChanging(System.Nullable<decimal> value);
    partial void OnPriceChanged();
    #endregion
		
		public foodDetail()
		{
			this._cartDetails = new EntitySet<cartDetail>(new Action<cartDetail>(this.attach_cartDetails), new Action<cartDetail>(this.detach_cartDetails));
			this._tblOrders = new EntitySet<tblOrder>(new Action<tblOrder>(this.attach_tblOrders), new Action<tblOrder>(this.detach_tblOrders));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int fid
		{
			get
			{
				return this._fid;
			}
			set
			{
				if ((this._fid != value))
				{
					this.OnfidChanging(value);
					this.SendPropertyChanging();
					this._fid = value;
					this.SendPropertyChanged("fid");
					this.OnfidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Category", DbType="VarChar(10)")]
		public string Category
		{
			get
			{
				return this._Category;
			}
			set
			{
				if ((this._Category != value))
				{
					this.OnCategoryChanging(value);
					this.SendPropertyChanging();
					this._Category = value;
					this.SendPropertyChanged("Category");
					this.OnCategoryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Name", DbType="VarChar(40)")]
		public string Name
		{
			get
			{
				return this._Name;
			}
			set
			{
				if ((this._Name != value))
				{
					this.OnNameChanging(value);
					this.SendPropertyChanging();
					this._Name = value;
					this.SendPropertyChanged("Name");
					this.OnNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ImgPath", DbType="VarChar(MAX)")]
		public string ImgPath
		{
			get
			{
				return this._ImgPath;
			}
			set
			{
				if ((this._ImgPath != value))
				{
					this.OnImgPathChanging(value);
					this.SendPropertyChanging();
					this._ImgPath = value;
					this.SendPropertyChanged("ImgPath");
					this.OnImgPathChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Price", DbType="Decimal(18,2)")]
		public System.Nullable<decimal> Price
		{
			get
			{
				return this._Price;
			}
			set
			{
				if ((this._Price != value))
				{
					this.OnPriceChanging(value);
					this.SendPropertyChanging();
					this._Price = value;
					this.SendPropertyChanged("Price");
					this.OnPriceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodDetail_cartDetail", Storage="_cartDetails", ThisKey="fid", OtherKey="Product_Id")]
		public EntitySet<cartDetail> cartDetails
		{
			get
			{
				return this._cartDetails;
			}
			set
			{
				this._cartDetails.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodDetail_tblOrder", Storage="_tblOrders", ThisKey="fid", OtherKey="fid")]
		public EntitySet<tblOrder> tblOrders
		{
			get
			{
				return this._tblOrders;
			}
			set
			{
				this._tblOrders.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_cartDetails(cartDetail entity)
		{
			this.SendPropertyChanging();
			entity.foodDetail = this;
		}
		
		private void detach_cartDetails(cartDetail entity)
		{
			this.SendPropertyChanging();
			entity.foodDetail = null;
		}
		
		private void attach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.foodDetail = this;
		}
		
		private void detach_tblOrders(tblOrder entity)
		{
			this.SendPropertyChanging();
			entity.foodDetail = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.cartDetails")]
	public partial class cartDetail : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Cart_Id;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _Product_Id;
		
		private int _Quantity;
		
		private EntityRef<foodDetail> _foodDetail;
		
		private EntityRef<UserDetail> _UserDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnCart_IdChanging(int value);
    partial void OnCart_IdChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnProduct_IdChanging(System.Nullable<int> value);
    partial void OnProduct_IdChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public cartDetail()
		{
			this._foodDetail = default(EntityRef<foodDetail>);
			this._UserDetail = default(EntityRef<UserDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cart_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Cart_Id
		{
			get
			{
				return this._Cart_Id;
			}
			set
			{
				if ((this._Cart_Id != value))
				{
					this.OnCart_IdChanging(value);
					this.SendPropertyChanging();
					this._Cart_Id = value;
					this.SendPropertyChanged("Cart_Id");
					this.OnCart_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._UserDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Product_Id", DbType="Int")]
		public System.Nullable<int> Product_Id
		{
			get
			{
				return this._Product_Id;
			}
			set
			{
				if ((this._Product_Id != value))
				{
					if (this._foodDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnProduct_IdChanging(value);
					this.SendPropertyChanging();
					this._Product_Id = value;
					this.SendPropertyChanged("Product_Id");
					this.OnProduct_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodDetail_cartDetail", Storage="_foodDetail", ThisKey="Product_Id", OtherKey="fid", IsForeignKey=true, DeleteRule="CASCADE")]
		public foodDetail foodDetail
		{
			get
			{
				return this._foodDetail.Entity;
			}
			set
			{
				foodDetail previousValue = this._foodDetail.Entity;
				if (((previousValue != value) 
							|| (this._foodDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foodDetail.Entity = null;
						previousValue.cartDetails.Remove(this);
					}
					this._foodDetail.Entity = value;
					if ((value != null))
					{
						value.cartDetails.Add(this);
						this._Product_Id = value.fid;
					}
					else
					{
						this._Product_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("foodDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDetail_cartDetail", Storage="_UserDetail", ThisKey="User_Id", OtherKey="UserId", IsForeignKey=true, DeleteRule="CASCADE")]
		public UserDetail UserDetail
		{
			get
			{
				return this._UserDetail.Entity;
			}
			set
			{
				UserDetail previousValue = this._UserDetail.Entity;
				if (((previousValue != value) 
							|| (this._UserDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserDetail.Entity = null;
						previousValue.cartDetails.Remove(this);
					}
					this._UserDetail.Entity = value;
					if ((value != null))
					{
						value.cartDetails.Add(this);
						this._User_Id = value.UserId;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblDistrict")]
	public partial class tblDistrict : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _d_Id;
		
		private string _state;
		
		private string _dName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ond_IdChanging(int value);
    partial void Ond_IdChanged();
    partial void OnstateChanging(string value);
    partial void OnstateChanged();
    partial void OndNameChanging(string value);
    partial void OndNameChanged();
    #endregion
		
		public tblDistrict()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_d_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int d_Id
		{
			get
			{
				return this._d_Id;
			}
			set
			{
				if ((this._d_Id != value))
				{
					this.Ond_IdChanging(value);
					this.SendPropertyChanging();
					this._d_Id = value;
					this.SendPropertyChanged("d_Id");
					this.Ond_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_state", DbType="VarChar(20)")]
		public string state
		{
			get
			{
				return this._state;
			}
			set
			{
				if ((this._state != value))
				{
					this.OnstateChanging(value);
					this.SendPropertyChanging();
					this._state = value;
					this.SendPropertyChanged("state");
					this.OnstateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dName", DbType="VarChar(20)")]
		public string dName
		{
			get
			{
				return this._dName;
			}
			set
			{
				if ((this._dName != value))
				{
					this.OndNameChanging(value);
					this.SendPropertyChanging();
					this._dName = value;
					this.SendPropertyChanged("dName");
					this.OndNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblCity")]
	public partial class tblCity : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _c_Id;
		
		private string _dName;
		
		private string _cName;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onc_IdChanging(int value);
    partial void Onc_IdChanged();
    partial void OndNameChanging(string value);
    partial void OndNameChanged();
    partial void OncNameChanging(string value);
    partial void OncNameChanged();
    #endregion
		
		public tblCity()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_c_Id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int c_Id
		{
			get
			{
				return this._c_Id;
			}
			set
			{
				if ((this._c_Id != value))
				{
					this.Onc_IdChanging(value);
					this.SendPropertyChanging();
					this._c_Id = value;
					this.SendPropertyChanged("c_Id");
					this.Onc_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_dName", DbType="VarChar(20)")]
		public string dName
		{
			get
			{
				return this._dName;
			}
			set
			{
				if ((this._dName != value))
				{
					this.OndNameChanging(value);
					this.SendPropertyChanging();
					this._dName = value;
					this.SendPropertyChanged("dName");
					this.OndNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_cName", DbType="VarChar(20)")]
		public string cName
		{
			get
			{
				return this._cName;
			}
			set
			{
				if ((this._cName != value))
				{
					this.OncNameChanging(value);
					this.SendPropertyChanging();
					this._cName = value;
					this.SendPropertyChanged("cName");
					this.OncNameChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.tblOrders")]
	public partial class tblOrder : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Oid;
		
		private System.Nullable<int> _User_Id;
		
		private System.Nullable<int> _fid;
		
		private int _Quantity;
		
		private EntityRef<foodDetail> _foodDetail;
		
		private EntityRef<UserDetail> _UserDetail;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnOidChanging(int value);
    partial void OnOidChanged();
    partial void OnUser_IdChanging(System.Nullable<int> value);
    partial void OnUser_IdChanged();
    partial void OnfidChanging(System.Nullable<int> value);
    partial void OnfidChanged();
    partial void OnQuantityChanging(int value);
    partial void OnQuantityChanged();
    #endregion
		
		public tblOrder()
		{
			this._foodDetail = default(EntityRef<foodDetail>);
			this._UserDetail = default(EntityRef<UserDetail>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Oid", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Oid
		{
			get
			{
				return this._Oid;
			}
			set
			{
				if ((this._Oid != value))
				{
					this.OnOidChanging(value);
					this.SendPropertyChanging();
					this._Oid = value;
					this.SendPropertyChanged("Oid");
					this.OnOidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_User_Id", DbType="Int")]
		public System.Nullable<int> User_Id
		{
			get
			{
				return this._User_Id;
			}
			set
			{
				if ((this._User_Id != value))
				{
					if (this._UserDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnUser_IdChanging(value);
					this.SendPropertyChanging();
					this._User_Id = value;
					this.SendPropertyChanged("User_Id");
					this.OnUser_IdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fid", DbType="Int")]
		public System.Nullable<int> fid
		{
			get
			{
				return this._fid;
			}
			set
			{
				if ((this._fid != value))
				{
					if (this._foodDetail.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnfidChanging(value);
					this.SendPropertyChanging();
					this._fid = value;
					this.SendPropertyChanged("fid");
					this.OnfidChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantity", DbType="Int NOT NULL")]
		public int Quantity
		{
			get
			{
				return this._Quantity;
			}
			set
			{
				if ((this._Quantity != value))
				{
					this.OnQuantityChanging(value);
					this.SendPropertyChanging();
					this._Quantity = value;
					this.SendPropertyChanged("Quantity");
					this.OnQuantityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="foodDetail_tblOrder", Storage="_foodDetail", ThisKey="fid", OtherKey="fid", IsForeignKey=true)]
		public foodDetail foodDetail
		{
			get
			{
				return this._foodDetail.Entity;
			}
			set
			{
				foodDetail previousValue = this._foodDetail.Entity;
				if (((previousValue != value) 
							|| (this._foodDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._foodDetail.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._foodDetail.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._fid = value.fid;
					}
					else
					{
						this._fid = default(Nullable<int>);
					}
					this.SendPropertyChanged("foodDetail");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UserDetail_tblOrder", Storage="_UserDetail", ThisKey="User_Id", OtherKey="UserId", IsForeignKey=true)]
		public UserDetail UserDetail
		{
			get
			{
				return this._UserDetail.Entity;
			}
			set
			{
				UserDetail previousValue = this._UserDetail.Entity;
				if (((previousValue != value) 
							|| (this._UserDetail.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UserDetail.Entity = null;
						previousValue.tblOrders.Remove(this);
					}
					this._UserDetail.Entity = value;
					if ((value != null))
					{
						value.tblOrders.Add(this);
						this._User_Id = value.UserId;
					}
					else
					{
						this._User_Id = default(Nullable<int>);
					}
					this.SendPropertyChanged("UserDetail");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
